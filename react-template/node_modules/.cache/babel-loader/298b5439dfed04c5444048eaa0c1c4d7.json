{"ast":null,"code":"import _objectSpread from \"C:/Users/moham/OneDrive/Documents/GitHub/hackerrank-frontend/react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"C:/Users/moham/OneDrive/Documents/GitHub/hackerrank-frontend/react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"C:/Users/moham/OneDrive/Documents/GitHub/hackerrank-frontend/react-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\moham\\\\OneDrive\\\\Documents\\\\GitHub\\\\hackerrank-frontend\\\\react-template\\\\src\\\\components\\\\CustomTabs\\\\CustomTabs.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // nodejs library that concatenates classes\n\nimport classNames from \"classnames\"; // nodejs library to set properties for components\n\nimport PropTypes from \"prop-types\"; // material-ui components\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport Icon from \"@material-ui/core/Icon\"; // core components\n\nimport Card from \"components/Card/Card.js\";\nimport CardBody from \"components/Card/CardBody.js\";\nimport CardHeader from \"components/Card/CardHeader.js\";\nimport styles from \"assets/jss/material-kit-react/components/customTabsStyle.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(styles);\nexport default function CustomTabs(props) {\n  _s();\n\n  var _classNames,\n      _this = this;\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      value = _React$useState2[0],\n      setValue = _React$useState2[1];\n\n  var handleChange = function handleChange(event, value) {\n    setValue(value);\n  };\n\n  var classes = useStyles();\n  var headerColor = props.headerColor,\n      plainTabs = props.plainTabs,\n      tabs = props.tabs,\n      title = props.title,\n      rtlActive = props.rtlActive;\n  var cardTitle = classNames((_classNames = {}, _defineProperty(_classNames, classes.cardTitle, true), _defineProperty(_classNames, classes.cardTitleRTL, rtlActive), _classNames));\n  return /*#__PURE__*/_jsxDEV(Card, {\n    plain: plainTabs,\n    children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n      color: headerColor,\n      plain: plainTabs,\n      children: [title !== undefined ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: cardTitle,\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 32\n      }, this) : null, /*#__PURE__*/_jsxDEV(Tabs, {\n        value: value,\n        onChange: handleChange,\n        classes: {\n          root: classes.tabsRoot,\n          indicator: classes.displayNone\n        },\n        children: tabs.map(function (prop, key) {\n          var icon = {};\n\n          if (prop.tabIcon) {\n            icon = {\n              icon: typeof prop.tabIcon === \"string\" ? /*#__PURE__*/_jsxDEV(Icon, {\n                children: prop.tabIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, _this) : /*#__PURE__*/_jsxDEV(prop.tabIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 21\n              }, _this)\n            };\n          }\n\n          return /*#__PURE__*/_jsxDEV(Tab, _objectSpread({\n            classes: {\n              root: classes.tabRootButton,\n              label: classes.tabLabel,\n              selected: classes.tabSelected,\n              wrapper: classes.tabWrapper\n            },\n            label: prop.tabName\n          }, icon), key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n      children: tabs.map(function (prop, key) {\n        if (key === value) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            children: prop.tabContent\n          }, key, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 20\n          }, _this);\n        }\n\n        return null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CustomTabs, \"amYE+i0RSNXWcaZXPkaqPcPCmRg=\", false, function () {\n  return [useStyles];\n});\n\n_c = CustomTabs;\nCustomTabs.propTypes = {\n  headerColor: PropTypes.oneOf([\"warning\", \"success\", \"danger\", \"info\", \"primary\", \"rose\"]),\n  title: PropTypes.string,\n  tabs: PropTypes.arrayOf(PropTypes.shape({\n    tabName: PropTypes.string.isRequired,\n    tabIcon: PropTypes.object,\n    tabContent: PropTypes.node.isRequired\n  })),\n  rtlActive: PropTypes.bool,\n  plainTabs: PropTypes.bool\n};\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomTabs\");","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Documents/GitHub/hackerrank-frontend/react-template/src/components/CustomTabs/CustomTabs.js"],"names":["React","classNames","PropTypes","makeStyles","Tabs","Tab","Icon","Card","CardBody","CardHeader","styles","useStyles","CustomTabs","props","useState","value","setValue","handleChange","event","classes","headerColor","plainTabs","tabs","title","rtlActive","cardTitle","cardTitleRTL","undefined","root","tabsRoot","indicator","displayNone","map","prop","key","icon","tabIcon","tabRootButton","label","tabLabel","selected","tabSelected","wrapper","tabWrapper","tabName","tabContent","propTypes","oneOf","string","arrayOf","shape","isRequired","object","node","bool"],"mappings":"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","sourcesContent":["import React from \"react\";\r\n// nodejs library that concatenates classes\r\nimport classNames from \"classnames\";\r\n// nodejs library to set properties for components\r\nimport PropTypes from \"prop-types\";\r\n\r\n// material-ui components\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport Icon from \"@material-ui/core/Icon\";\r\n// core components\r\nimport Card from \"components/Card/Card.js\";\r\nimport CardBody from \"components/Card/CardBody.js\";\r\nimport CardHeader from \"components/Card/CardHeader.js\";\r\n\r\nimport styles from \"assets/jss/material-kit-react/components/customTabsStyle.js\";\r\n\r\nconst useStyles = makeStyles(styles);\r\n\r\nexport default function CustomTabs(props) {\r\n  const [value, setValue] = React.useState(0);\r\n\r\n  const handleChange = (event, value) => {\r\n    setValue(value);\r\n  };\r\n  const classes = useStyles();\r\n  const { headerColor, plainTabs, tabs, title, rtlActive } = props;\r\n  const cardTitle = classNames({\r\n    [classes.cardTitle]: true,\r\n    [classes.cardTitleRTL]: rtlActive,\r\n  });\r\n  return (\r\n    <Card plain={plainTabs}>\r\n      <CardHeader color={headerColor} plain={plainTabs}>\r\n        {title !== undefined ? <div className={cardTitle}>{title}</div> : null}\r\n        <Tabs\r\n          value={value}\r\n          onChange={handleChange}\r\n          classes={{\r\n            root: classes.tabsRoot,\r\n            indicator: classes.displayNone,\r\n          }}\r\n        >\r\n          {tabs.map((prop, key) => {\r\n            var icon = {};\r\n            if (prop.tabIcon) {\r\n              icon = {\r\n                icon:\r\n                  typeof prop.tabIcon === \"string\" ? (\r\n                    <Icon>{prop.tabIcon}</Icon>\r\n                  ) : (\r\n                    <prop.tabIcon />\r\n                  ),\r\n              };\r\n            }\r\n            return (\r\n              <Tab\r\n                classes={{\r\n                  root: classes.tabRootButton,\r\n                  label: classes.tabLabel,\r\n                  selected: classes.tabSelected,\r\n                  wrapper: classes.tabWrapper,\r\n                }}\r\n                key={key}\r\n                label={prop.tabName}\r\n                {...icon}\r\n              />\r\n            );\r\n          })}\r\n        </Tabs>\r\n      </CardHeader>\r\n      <CardBody>\r\n        {tabs.map((prop, key) => {\r\n          if (key === value) {\r\n            return <div key={key}>{prop.tabContent}</div>;\r\n          }\r\n          return null;\r\n        })}\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n}\r\n\r\nCustomTabs.propTypes = {\r\n  headerColor: PropTypes.oneOf([\r\n    \"warning\",\r\n    \"success\",\r\n    \"danger\",\r\n    \"info\",\r\n    \"primary\",\r\n    \"rose\",\r\n  ]),\r\n  title: PropTypes.string,\r\n  tabs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      tabName: PropTypes.string.isRequired,\r\n      tabIcon: PropTypes.object,\r\n      tabContent: PropTypes.node.isRequired,\r\n    })\r\n  ),\r\n  rtlActive: PropTypes.bool,\r\n  plainTabs: PropTypes.bool,\r\n};\r\n"]},"metadata":{},"sourceType":"module"}